// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./database.sqlite"
}

enum SwipeStatus {
  ACCEPTED
  REJECTED
}

model User {
  id              Int            @id @default(autoincrement())
  name            String
  email           String         @unique
  password        String
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  MessageThread   MessageThread? @relation(fields: [messageThreadId], references: [id])
  messageThreadId Int?
  messages        Message[]
  Swipe           Swipe[]
}

model Dog {
  id        Int      @id @default(autoincrement())
  name      String
  sex       String
  breed     String
  age       Int
  bio       String
  image     String
  location  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Swipe     Swipe[]
}

model Message {
  id              Int            @id @default(autoincrement())
  content         String
  senderId        Int
  receiverId      Int
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  MessageThread   MessageThread? @relation(fields: [messageThreadId], references: [id])
  messageThreadId Int?
  User            User?          @relation(fields: [userId], references: [id])
  userId          Int?
}

model MessageThread {
  id           Int       @id @default(autoincrement())
  participants User[]
  messages     Message[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Swipe {
  id        Int         @id @default(autoincrement())
  dogId     Int
  userId    Int
  status    SwipeStatus
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Dog       Dog         @relation(fields: [dogId], references: [id])
  User      User        @relation(fields: [userId], references: [id])

  @@unique([dogId, userId])
}
